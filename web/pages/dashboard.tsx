import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import Skeleton from 'react-loading-skeleton'
import 'react-loading-skeleton/dist/skeleton.css'
import { useEffect, useState } from 'react'
import { useAuth } from '../contexts/auth'
import { parseCookies } from 'nookies'
import useSWR from 'swr'
import { api } from '../services/api'

interface ICourses {
  id: number;
  name: string;
}
interface IResponse {
  data: ICourses[];
}



const Dashboard: NextPage = () => {
  const context = useAuth()
  const { user, Logout } = context
  const get = async (url: string) => {
    const { 'token': token } = parseCookies()
    api.defaults.headers.common['Authorization'] = `Bearer ${token}`
    const res = await api.get(url)
    return res.data
  }
  const { data } = useSWR('/users/me/courses', get)
  const logout = () => {
    Logout()
  }
  return (
    <div>
      <Head>
        <title>Next - Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="grid grid-cols-12 h-screen">
        <div className="col-span-6 bg-blue-300 h-full" style={{ background: "url('https://images.unsplash.com/photo-1636653166975-7c4c880bbe62?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=580&q=80') no-repeat 50% 50%", backgroundSize: '700px' }}></div>
        <div className="col-span-6">
          <div className="flex justify-center m-auto flex-col py-2 px-3 max-w-sm h-full">
            <div>
              <p className="text-gray-400">Welcome back, {user?.username} <button onClick={logout} className="text-blue-500">Logout</button></p>
              <h1 className="text-3xl font-bold">Here is your courses</h1>
              {!data && (
                <Skeleton count={5} />
              )}
              {data && (
                <div>
                  <ul>
                    {data.map((course) => (
                      <li key={course.id}>{course.name}</li>
                    ))}
                  </ul>
                </div>
              )}
            </div>
          </div>
        </div>
      </main >
    </div >
  )
}

// Private route
export const getServerSideProps: GetServerSideProps = async (ctx) => {

  // Validating user by token
  const { ['token']: token } = parseCookies(ctx)
  if (!token) {
    return {
      redirect: {
        destination: '/',
        permanent: false,
      }
    }
  }

  return {
    props: {}
  }
}

export default Dashboard
